{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/agenda-service.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/coronavirus/coronavirus.component.ts","./src/app/coronavirus/coronavirus.component.html","./src/app/pages/Account/login/login.component.ts","./src/app/pages/Account/login/login.component.html","./src/app/pages/Account/logout/logout.component.ts","./src/app/pages/Account/logout/logout.component.html","./src/app/pages/Account/registra-account/registra-account.component.ts","./src/app/pages/Account/registra-account/registra-account.component.html","./src/app/pages/error-component/error-component.component.ts","./src/app/pages/error-component/error-component.component.html","./src/app/pages/main/main.component.ts","./src/app/pages/main/main.component.html","./src/app/pages/modifica-contatto/modifica-contatto.component.ts","./src/app/pages/modifica-contatto/modifica-contatto.component.html","./src/app/pages/registra-contatto/registra-contatto.component.ts","./src/app/pages/registra-contatto/registra-contatto.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AgendaServiceService {\r\n\r\n  details: any;\r\n\r\n  account = JSON.parse(localStorage.getItem(\"Account\"));\r\n\r\n  constructor(private http: HttpClient, public router: Router) { }\r\n\r\n  public getContatti(id_account = this.account.id ,key) {\r\n    return this.http.get(`http://localhost:8080/contacts/${id_account}?keyword=${key}`);\r\n  }\r\n\r\n  public getTuttiContatti(id_account = this.account.id) {\r\n    return this.http.get(`http://localhost:8080/contacts/${id_account}`);\r\n  }\r\n\r\n  public deleteContatto(identifier) {\r\n    return this.http.delete(`http://localhost:8080/contacts/${identifier}`);\r\n  }\r\n\r\n  public getAccount(nickname, password) {\r\n    return this.http.get(`http://localhost:8080/account/?nickname=${nickname}&password=${password}`);\r\n  }\r\n\r\n  public test() {\r\n    return this.http.get('http://localhost:8080/contacts/test');\r\n  }\r\n\r\n  public handleError(error: Response | any) {\r\n    if(error.status == 0) {\r\n      this.router.navigate(['error']);\r\n    }\r\n  }\r\n\r\n  public checkConnection(response: Response | any) {\r\n    if(response.status == 200) {\r\n      this.router.navigate(['/agenda']);\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MainComponent } from './pages/main/main.component';\r\nimport { RegistraContattoComponent } from './pages/registra-contatto/registra-contatto.component'\r\nimport { ErrorComponentComponent } from './pages/error-component/error-component.component'\r\nimport { ModificaContattoComponent } from './pages/modifica-contatto/modifica-contatto.component';\r\nimport { RegistraAccountComponent } from './pages/Account/registra-account/registra-account.component';\r\nimport { LoginComponent } from './pages/Account/login/login.component';\r\nimport { LogoutComponent } from './pages/Account/logout/logout.component';\r\nimport { CoronavirusComponent } from './coronavirus/coronavirus.component';\r\n\r\nconst routes: Routes = [\r\n  {path: \"\", redirectTo:\"agenda\", pathMatch:\"full\"},\r\n  {path: \"agenda\", component: MainComponent},\r\n  {path: \"form\", component: RegistraContattoComponent},\r\n  {path: \"error\", component: ErrorComponentComponent},\r\n  {path: \"modifica\", component: ModificaContattoComponent},\r\n  {path: \"registrazione\", component: RegistraAccountComponent},\r\n  {path: \"login\", component: LoginComponent},\r\n  {path: \"logout\", component: LogoutComponent},\r\n  {path: \"coronavirus\", component: CoronavirusComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport {ThemePalette} from '@angular/material/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n\r\n  title = 'agenda';\r\n  showFiller = false;\r\n  isTrue: boolean = false;\r\n\r\n  color: ThemePalette = 'accent';\r\n  checked = false;\r\n  disabled = false;\r\n\r\n  changeTheme() {\r\n    this.isTrue = !this.isTrue;\r\n  }\r\n\r\n  logOut() {\r\n    localStorage.removeItem(\"Account\");\r\n    window.location.reload();\r\n  }\r\n  \r\n}\r\n","<div [class.alternative]=\"isTrue\" style=\"height: 100vh;\">\r\n  <mat-toolbar color=\"primary\">\r\n    <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with menu icon\" type=\"button\"\r\n      (click)=\"drawer.toggle()\">\r\n      <mat-icon>menu</mat-icon>\r\n    </button>\r\n    <span>Agenda</span>\r\n    <span class=\"example-spacer\"></span>\r\n\r\n    <mat-slide-toggle class=\"example-margin\" [color]=\"color\" [checked]=\"checked\" [disabled]=\"disabled\"\r\n      (click)=\"changeTheme()\">\r\n      <i class=\"fa fa-moon-o\" aria-hidden=\"true\"></i>\r\n    </mat-slide-toggle>\r\n\r\n    <a href=\"https://github.com/RyalZX/agendaAngular\">\r\n      <button mat-icon-button>\r\n        <mat-icon class=\"fa fa-github fa-2x\" aria-hidden=\"true\"> </mat-icon>\r\n      </button>\r\n    </a>\r\n\r\n  </mat-toolbar>\r\n\r\n  <mat-drawer-container class=\"example-container\" autosize>\r\n\r\n    <br>\r\n\r\n    <router-outlet></router-outlet>\r\n\r\n    <mat-drawer #drawer class=\"example-sidenav\" mode=\"side\">\r\n      <button mat-raised-button color=\"primary\" routerLink=\"/agenda\" class=\"button\">\r\n        <i class=\"fa fa-address-book\" aria-hidden=\"true\"></i>\r\n        Contatti\r\n      </button>\r\n      <br> <br>\r\n      <button mat-raised-button color=\"primary\" routerLink=\"/form\" class=\"button\">\r\n        <i class=\"fa fa-user-plus\" aria-hidden=\"true\"></i>\r\n        Registra contatto\r\n      </button>\r\n      \r\n      <div class=\"account\">\r\n      <button mat-raised-button color=\"primary\" routerLink=\"/login\" class=\"button\">\r\n        <i class=\"fa fa-sign-in\" aria-hidden=\"true\"></i>\r\n        Login\r\n      </button>\r\n      <br> <br>\r\n      <button mat-raised-button color=\"primary\" (click)=\"logOut()\" class=\"button\">\r\n        <i class=\"fa fa-sign-out\" aria-hidden=\"true\"></i>\r\n        Logout\r\n      </button>\r\n      <br> <br>\r\n      <button mat-raised-button color=\"primary\" routerLink=\"/registrazione\" class=\"button\">\r\n        <i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>\r\n        Registra account\r\n      </button>\r\n    </div>\r\n\r\n      <br>\r\n      <p>developed by Gianluca Lauro</p>\r\n\r\n    </mat-drawer>\r\n  </mat-drawer-container>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http'\r\nimport { RouterModule } from '@angular/router';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { MainComponent } from './pages/main/main.component';\r\nimport { AgendaServiceService } from '../app/agenda-service.service';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatIconModule} from '@angular/material/icon'\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport { RegistraContattoComponent } from './pages/registra-contatto/registra-contatto.component';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport { ErrorComponentComponent } from './pages/error-component/error-component.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { ModificaContattoComponent } from './pages/modifica-contatto/modifica-contatto.component';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport { RegistraAccountComponent } from './pages/Account/registra-account/registra-account.component';\r\nimport { LoginComponent } from './pages/Account/login/login.component';\r\nimport { LogoutComponent } from './pages/Account/logout/logout.component';\r\nimport { CoronavirusComponent } from './coronavirus/coronavirus.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MainComponent,\r\n    RegistraContattoComponent,\r\n    ErrorComponentComponent,\r\n    ModificaContattoComponent,\r\n    RegistraAccountComponent,\r\n    LoginComponent,\r\n    LogoutComponent,\r\n    CoronavirusComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MatSliderModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatSidenavModule,\r\n    MatFormFieldModule,\r\n    RouterModule,\r\n    FontAwesomeModule,\r\n    ReactiveFormsModule,\r\n    MatCardModule,\r\n    MatSlideToggleModule\r\n  ],\r\n  providers: [AgendaServiceService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'app-coronavirus',\r\n  templateUrl: './coronavirus.component.html',\r\n  styleUrls: ['./coronavirus.component.scss']\r\n})\r\nexport class CoronavirusComponent implements OnInit {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n      this.http.get('https://api.covid19api.com/summary').subscribe(\r\n        data => {\r\n          let coronaDati = JSON.stringify(data);\r\n          this.datiCoronaVirus = JSON.parse(coronaDati);\r\n          console.log(this.datiCoronaVirus);\r\n        }\r\n      );\r\n      \r\n  }\r\n\r\n  datiCoronaVirus;\r\n\r\n  displayedColumns: string[] = ['NewConfirmed', 'TotalConfirmed', 'NewDeaths', 'TotalDeaths', 'NewRecovered', 'TotalRecovered'];\r\n\r\n}\r\n","<mat-card>\r\n\r\n    Nuovi confermati: {{datiCoronaVirus.Global.NewConfirmed}}\r\n    <br>\r\n    Totali confermati: {{datiCoronaVirus.Global.TotalConfirmed}}\r\n    <br>\r\n    Nuove morti: {{datiCoronaVirus.Global.NewDeaths}}\r\n    <br>\r\n    Morti totali: {{datiCoronaVirus.Global.TotalDeaths}}\r\n    <br>\r\n    Nuovi curati: {{datiCoronaVirus.Global.NewRecovered}}\r\n    <br>\r\n    Curati totali: {{datiCoronaVirus.Global.TotalRecovered}}\r\n\r\n  </mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AgendaServiceService } from '../../../agenda-service.service'\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  constructor(public service: AgendaServiceService, public router: Router, public http: HttpClient) { }\r\n\r\n  test: any;\r\n\r\n  ngOnInit() {\r\n\r\n    this.service.test().subscribe(\r\n      (data) => this.test = data,\r\n      (error) => this.service.handleError(error)\r\n    );\r\n\r\n    if(this.service.account != undefined) {\r\n      this.router.navigate(['/agenda']);\r\n    }\r\n\r\n  }\r\n\r\n  loggedIn = {\r\n    nickname: '',\r\n    password: '',\r\n  };\r\n\r\n  login() {\r\n    //chiamata rest per il controllo delle credenziali\r\n    this.service.getAccount(this.loggedIn.nickname, this.loggedIn.password).subscribe(\r\n      (response : any) => {\r\n        if(response != null) {\r\n          let Account = {id: response.id, nickname: response.nickname}\r\n          localStorage.setItem(\"Account\", JSON.stringify(Account));\r\n          location.reload();\r\n        } else {\r\n          document.getElementById(\"erroreLogin\").innerHTML=\"Errore, nickname o password errati\"\r\n        }\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  resetAll() {\r\n    this.loggedIn.nickname = '';\r\n    this.loggedIn.password = '';\r\n  }\r\n\r\n}\r\n","<mat-card>\r\n  <h1>\r\n    <i class=\"fa fa-sign-in\" aria-hidden=\"true\"></i>\r\n    Login\r\n  </h1>\r\n\r\n  <br>\r\n\r\n  <mat-form-field appearance=\"fill\">\r\n    <mat-label>Nickname</mat-label>\r\n    <input matInput [(ngModel)]=\"loggedIn.nickname\" minlength=\"3\" maxlength=\"15\">\r\n  </mat-form-field>\r\n\r\n  <mat-form-field appearance=\"fill\" class=\"container\">\r\n    <mat-label>Password</mat-label>\r\n    <input matInput [(ngModel)]=\"loggedIn.password\" minlength=\"3\" maxlength=\"15\" type=\"password\">\r\n  </mat-form-field>\r\n\r\n  <br>\r\n  <div id=\"erroreLogin\"></div>\r\n\r\n  <button mat-raised-button color=\"primary\" (click)=\"login()\">\r\n    Login\r\n  </button>\r\n  <button mat-stroked-button color=\"warn\" (click)=\"resetAll()\">Cancella</button>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-logout',\r\n  templateUrl: './logout.component.html',\r\n  styleUrls: ['./logout.component.scss']\r\n})\r\nexport class LogoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-card>\r\n    <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>\r\n    <br>\r\n    <h1>Effettua il login prima di accedere a questa pagina!</h1>\r\n  </mat-card>","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { AgendaServiceService } from '../../../agenda-service.service'\r\n\r\n@Component({\r\n  selector: 'app-registra-account',\r\n  templateUrl: './registra-account.component.html',\r\n  styleUrls: ['./registra-account.component.scss']\r\n})\r\nexport class RegistraAccountComponent implements OnInit {\r\n\r\n  constructor(private http: HttpClient, public router: Router, public service: AgendaServiceService) { }\r\n\r\n  test: any;\r\n\r\n  ngOnInit() {\r\n\r\n    this.service.test().subscribe(\r\n      (data) => this.test = data,\r\n      (error) => this.service.handleError(error)\r\n    );\r\n\r\n  }\r\n\r\n  registrazioneForm = new FormGroup({\r\n    nickname: new FormControl('', Validators.required),\r\n    password: new FormControl('', Validators.required)\r\n  })\r\n\r\n  url = \"http://localhost:8080/account/\";\r\n  postData = {\r\n    nickname: '',\r\n    password: '',\r\n  };\r\n\r\n  registraAccount() {\r\n    this.http.post(this.url, this.postData).subscribe();\r\n    this.router.navigate(['/agenda']);\r\n  }\r\n\r\n  resetAll() {\r\n    this.postData.nickname = '';\r\n    this.postData.password = '';\r\n  }\r\n\r\n}\r\n","<mat-card>\r\n    <h1>\r\n      <i class=\"fa fa-user-plus\" aria-hidden=\"true\"></i>\r\n      Registra un nuovo account\r\n    </h1>\r\n  \r\n    <br>\r\n  \r\n    <form [formGroup]=\"registrazioneForm\">\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>Nickname</mat-label>\r\n        <input matInput [(ngModel)]=\"postData.nickname\" formControlName=\"nickname\" minlength=\"3\" maxlength=\"15\">\r\n        <mat-error>Inserire un nickname valido</mat-error>\r\n      </mat-form-field>\r\n  \r\n      <mat-form-field appearance=\"fill\" class=\"container\">\r\n        <mat-label>Password</mat-label>\r\n        <input matInput [(ngModel)]=\"postData.password\" formControlName=\"password\" minlength=\"3\" maxlength=\"15\" type=\"password\">\r\n        <mat-error>Inserire una password valida</mat-error>\r\n      </mat-form-field>\r\n  \r\n      <br>\r\n  \r\n      <button mat-raised-button color=\"primary\" (click)=\"registraAccount()\" [disabled]=\"!registrazioneForm.valid\"> Registra\r\n      </button>\r\n      <button mat-stroked-button color=\"warn\" (click)=\"resetAll()\">Cancella</button>\r\n    </form>\r\n  </mat-card>","import { Component, OnInit } from '@angular/core';\r\nimport { AgendaServiceService } from '../../agenda-service.service'\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-error-component',\r\n  templateUrl: './error-component.component.html',\r\n  styleUrls: ['./error-component.component.scss']\r\n})\r\nexport class ErrorComponentComponent implements OnInit {\r\n\r\n  constructor(private service: AgendaServiceService, private router: Router) { }\r\n\r\n  persona: any;\r\n  test: any;\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.service.test().subscribe(\r\n      (data) => this.service.handleError(data),\r\n      (error) => this.service.checkConnection(error)\r\n    );\r\n\r\n  }\r\n\r\n}\r\n","<mat-card>\r\n  <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>\r\n  <br>\r\n  <h1>Errore, non c'è connessione al back-end</h1>\r\n  <h2>Riprovare più tardi</h2>\r\n</mat-card>\r\n","import { Component, OnInit, ViewChild, Input } from '@angular/core';\r\nimport { AgendaServiceService } from '../../agenda-service.service'\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.scss']\r\n})\r\nexport class MainComponent implements OnInit {\r\n  key: string;\r\n  persona: any;\r\n\r\n  displayedColumns: string[] = ['nome', 'cognome', 'numero', 'email', 'azioni'];\r\n\r\n  constructor(public service: AgendaServiceService, public router: Router, private http: HttpClient) { }\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.service.account != undefined) {\r\n      this.service.getTuttiContatti()\r\n      .subscribe((data) => this.persona = data,\r\n        error => this.service.handleError(error));\r\n    } else {\r\n      this.router.navigate(['/logout']);\r\n    }\r\n\r\n  }\r\n\r\n  getContatti() {\r\n    this.service.getContatti(this.service.account.id ,this.key).subscribe((data) => this.persona = data);\r\n  }\r\n\r\n  eliminaContatto(idSelected: any) {\r\n    this.service.deleteContatto(idSelected.id).subscribe();\r\n    window.location.reload();\r\n  }\r\n\r\n  passaContatto(person: any) {\r\n    this.service.details = person; \r\n    this.router.navigate(['/modifica'])\r\n  }\r\n\r\n}\r\n","<mat-card>\r\n  <h1>\r\n    <i class=\"fa fa-user-circle\" aria-hidden=\"true\"></i>\r\n    Contatti\r\n  </h1>\r\n\r\n    Ciao {{service.account.nickname}}!\r\n\r\n  <p>\r\n    <mat-form-field class=\"example-full-width\">\r\n      <mat-label>Filtro</mat-label>\r\n      <textarea matInput placeholder=\"Inserisci una keyword\" [(ngModel)]=\"key\" name=\"keyword\"></textarea>\r\n    </mat-form-field>\r\n\r\n    <button mat-raised-button color=\"primary\" (click)=\"getContatti()\" class=\"button\">\r\n      <i class=\"fa fa-search\" aria-hidden=\"true\"></i> Ricerca\r\n    </button>\r\n  </p>\r\n\r\n  <br> <br>\r\n\r\n  <table mat-table [dataSource]=\"persona\" class=\"mat-elevation-z8\">\r\n\r\n    <!--<ng-container matColumnDef=\"id\">\r\n    <th mat-header-cell *matHeaderCellDef> ID </th>\r\n    <td mat-cell *matCellDef=\"let person\"> {{person.id}} </td>\r\n  </ng-container> -->\r\n\r\n    <ng-container matColumnDef=\"nome\">\r\n      <th mat-header-cell *matHeaderCellDef> Nome </th>\r\n      <td mat-cell *matCellDef=\"let person\"> {{person.nome}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"cognome\">\r\n      <th mat-header-cell *matHeaderCellDef> Cognome </th>\r\n      <td mat-cell *matCellDef=\"let person\"> {{person.cognome}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"numero\">\r\n      <th mat-header-cell *matHeaderCellDef> Numero </th>\r\n      <td mat-cell *matCellDef=\"let person\"> {{person.numero}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"email\">\r\n      <th mat-header-cell *matHeaderCellDef> Email </th>\r\n      <td mat-cell *matCellDef=\"let person\"> {{person.email}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"azioni\">\r\n      <th mat-header-cell *matHeaderCellDef> Azioni </th>\r\n      <td mat-cell *matCellDef=\"let person\">\r\n\r\n        <button mat-icon-button (click)=\"passaContatto(person)\">\r\n          <mat-icon class=\"fa fa-pencil-square-o fa-2x\" aria-hidden=\"true\"> </mat-icon>\r\n        </button>\r\n\r\n        <button mat-icon-button (click)=\"eliminaContatto(person)\">\r\n          <mat-icon class=\"fa fa-trash fa-2x\" aria-hidden=\"true\"> </mat-icon>\r\n        </button>\r\n\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AgendaServiceService } from '../../agenda-service.service'\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-modifica-contatto',\r\n  templateUrl: './modifica-contatto.component.html',\r\n  styleUrls: ['./modifica-contatto.component.scss']\r\n})\r\nexport class ModificaContattoComponent implements OnInit {\r\n\r\n  agendaForm = new FormGroup({\r\n    nome: new FormControl('', Validators.required),\r\n    cognome: new FormControl('', Validators.required),\r\n    numero: new FormControl('', [Validators.required, Validators.pattern(\"^[0-9]*$\")]),\r\n    email: new FormControl('', [Validators.required, Validators.email])\r\n  })\r\n\r\n  putData = {\r\n    id: this.service.details.id,\r\n    nome: this.service.details.nome,\r\n    cognome: this.service.details.cognome,\r\n    numero: this.service.details.numero,\r\n    email: this.service.details.email,\r\n  };\r\n\r\n  constructor(private http: HttpClient, private service: AgendaServiceService, public router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  resetAll() {\r\n    this.putData.nome = '';\r\n    this.putData.cognome = '';\r\n    this.putData.numero = '';\r\n    this.putData.email = '';\r\n  }\r\n\r\n  updateContatto() {\r\n    this.http.put(`http://localhost:8080/contacts/`, this.putData).subscribe();\r\n    this.router.navigate(['/agenda']); //redirect to the agenda\r\n  }\r\n\r\n}\r\n","<mat-card>\r\n  <h1>\r\n    <i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>\r\n    Modifica il contatto\r\n  </h1>\r\n\r\n  <br>\r\n\r\n  <form [formGroup]=\"agendaForm\">\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Nome</mat-label>\r\n      <input matInput [(ngModel)]=\"putData.nome\" formControlName=\"nome\" minlength=\"3\" maxlength=\"20\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"fill\" class=\"container\">\r\n      <mat-label>Cognome</mat-label>\r\n      <input matInput [(ngModel)]=\"putData.cognome\" formControlName=\"cognome\" minlength=\"3\" maxlength=\"20\">\r\n    </mat-form-field>\r\n    <br>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Numero</mat-label>\r\n      <input matInput [(ngModel)]=\"putData.numero\" formControlName=\"numero\" minlength=\"10\" maxlength=\"10\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"fill\" class=\"container\">\r\n      <mat-label>Email</mat-label>\r\n      <input matInput type=\"email\" [(ngModel)]=\"putData.email\" formControlName=\"email\" minlength=\"10\" maxlength=\"100\">\r\n    </mat-form-field>\r\n\r\n    <br>\r\n\r\n    <button mat-raised-button color=\"primary\" [disabled]=\"!agendaForm.valid\" (click)=\"updateContatto()\"> Modifica\r\n    </button>\r\n    <button mat-stroked-button color=\"warn\" (click)=\"resetAll()\">Cancella</button>\r\n  </form>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Router } from '@angular/router';\r\nimport { AgendaServiceService } from '../../agenda-service.service'\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-registra-contatto',\r\n  templateUrl: './registra-contatto.component.html',\r\n  styleUrls: ['./registra-contatto.component.scss']\r\n})\r\nexport class RegistraContattoComponent implements OnInit {\r\n  persona: any;\r\n\r\n  url = \"http://localhost:8080/contacts/\";\r\n  postData = {\r\n    nome: '',\r\n    cognome: '',\r\n    numero: '',\r\n    email: '',\r\n    idAccount: '',\r\n  };\r\n\r\n  agendaForm = new FormGroup({\r\n    nome: new FormControl('', Validators.required),\r\n    cognome: new FormControl('', Validators.required),\r\n    numero: new FormControl('', [Validators.required, Validators.pattern(\"^[0-9]*$\")]),\r\n    email: new FormControl('', [Validators.required, Validators.email])\r\n  })\r\n  \r\n  constructor(private http: HttpClient, public router: Router, private service: AgendaServiceService) { }\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.service.account == undefined) {\r\n      this.router.navigate(['/logout']);\r\n    } else {\r\n      this.postData.idAccount = this.service.account.id;\r\n    }\r\n\r\n  }\r\n\r\n  creaContatto() {\r\n    this.http.post(this.url, this.postData).subscribe();\r\n    this.router.navigate(['/agenda']);\r\n  }\r\n\r\n  resetAll() {\r\n    this.postData.nome = '';\r\n    this.postData.cognome = '';\r\n    this.postData.numero = '';\r\n    this.postData.email = '';\r\n  }\r\n\r\n}\r\n","<mat-card>\r\n  <h1>\r\n    <i class=\"fa fa-user-plus\" aria-hidden=\"true\"></i>\r\n    Registra un nuovo contatto\r\n  </h1>\r\n\r\n  <br>\r\n\r\n  <form [formGroup]=\"agendaForm\">\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Nome</mat-label>\r\n      <input matInput [(ngModel)]=\"postData.nome\" formControlName=\"nome\" minlength=\"3\" maxlength=\"20\">\r\n      <mat-error>Inserire un nome valido</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"fill\" class=\"container\">\r\n      <mat-label>Cognome</mat-label>\r\n      <input matInput [(ngModel)]=\"postData.cognome\" formControlName=\"cognome\" minlength=\"3\" maxlength=\"20\">\r\n      <mat-error>Inserire un cognome valido</mat-error>\r\n    </mat-form-field>\r\n    <br>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Numero</mat-label>\r\n      <input matInput [(ngModel)]=\"postData.numero\" formControlName=\"numero\" minlength=\"10\" maxlength=\"10\">\r\n      <mat-error>Inserire un numero valido</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"fill\" class=\"container\">\r\n      <mat-label>Email</mat-label>\r\n      <input matInput [(ngModel)]=\"postData.email\" formControlName=\"email\" minlength=\"10\" maxlength=\"100\">\r\n      <mat-error>Inserire una mail valida</mat-error>\r\n    </mat-form-field>\r\n\r\n    <br>\r\n\r\n    <button mat-raised-button color=\"primary\" (click)=\"creaContatto()\" [disabled]=\"!agendaForm.valid\"> Registra\r\n    </button>\r\n    <button mat-stroked-button color=\"warn\" (click)=\"resetAll()\">Cancella</button>\r\n  </form>\r\n</mat-card>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}